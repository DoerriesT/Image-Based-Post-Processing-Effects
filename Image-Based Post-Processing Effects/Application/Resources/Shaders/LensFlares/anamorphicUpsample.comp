#version 450 core

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(r11f_g11f_b10f, binding = 0) uniform writeonly image2D uImgOut;

layout(binding = 0) uniform sampler2D uHighInputTexture;
layout(binding = 1) uniform sampler2D uLowInputTexture;

uniform float uStretch = 0.75;

void main()
{	
	vec2 domainSize = textureSize(uHighInputTexture, 0).xy;
	vec2 texelSize = vec2(1.0 / domainSize);
	vec2 centerCoord = vec2(vec2(gl_GlobalInvocationID.xy) + 0.5) * texelSize;
	
	vec3 lowSample = texture(uLowInputTexture, centerCoord).rgb;
	vec3 c0 = lowSample * 0.25;
	vec3 c1 = lowSample * 0.5;
	vec3 c2 = lowSample * 0.25;
	vec3 c3 = texture(uHighInputTexture, centerCoord).rgb;
	vec3 c = mix(c3, c0 + c1 + c2, uStretch);
	
	imageStore(uImgOut, ivec2(gl_GlobalInvocationID.xy), vec4(c, 1.0));
}