#version 450 core

layout(quads, fractional_even_spacing, cw) in;

in vec3 tcPosition[];
in vec3 tcColor[];
out vec2 vTexCoord;
out vec3 vWorldPos;

uniform mat4 uViewProjection;
uniform sampler2D uDisplacementTexture;

// A very simple, regular procedural terrain for debugging cracks etc.
float debugSineHills(vec2 uv)
{
	const float HORIZ_SCALE = 4 * 3.14159, VERT_SCALE = 1;
	uv *= HORIZ_SCALE;
	return VERT_SCALE * (sin(uv.x) + 1) * (sin(uv.y) + 1) - 0.5;
}

void main()
{
    vec3 position = vec3(0.0f);

	float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;
	
	vec3 a = mix(tcPosition[0], tcPosition[1], u);
	
	vec3 b = mix(tcPosition[3], tcPosition[2], u);
	
	position = mix(a, b, v);
	
	vTexCoord = position.xz * 0.1;
	
	vec3 displacement = texture(uDisplacementTexture, vTexCoord).xyz;
	
	position += displacement;
	
	//position.y += debugSineHills(vTexCoord);
	
	vWorldPos = position;
	
    gl_Position = uViewProjection * vec4(position, 1.0);
}