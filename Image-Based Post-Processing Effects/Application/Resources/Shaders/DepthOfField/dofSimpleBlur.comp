#version 450 core

layout(local_size_x = 8, local_size_y = 8, local_size_z= 1) in;

layout(rgba16f, binding = 0) writeonly uniform image2D uImgOutA;
layout(rgba16f, binding = 1) writeonly uniform image2D uImgOutB;

layout(binding = 0) uniform sampler2D uColorTexture;
layout(binding = 1) uniform sampler2D uCocTexture;

uniform vec2 uSampleCoords[7 * 7];

void main()
{	
	vec2 domainSize = textureSize(uColorTexture, 0).xy * 0.5;
	vec2 texelSize = vec2(1.0 / domainSize);
	vec2 centerCoord = vec2(vec2(gl_GlobalInvocationID.xy) + 0.5) * texelSize;
	
	vec2 coc = texture(uCocTexture, centerCoord).xy * 0.5;

    float cocNear = coc.x;
	float cocFar = coc.y;
	
	vec3 sumNear = vec3(0.0);
	vec3 sumFar = vec3(0.0);
 
    for (int i = 0; i < 7 * 7; ++i)
    {
		vec2 kernelSampleCoord = uSampleCoords[i];

        vec2 sampleCoordNear = vec2(centerCoord + cocNear * texelSize * kernelSampleCoord);
        vec3 sampleNear = textureLod(uColorTexture, sampleCoordNear, 1).rgb;
 
        sumNear += sampleNear;

		vec2 sampleCoordFar = vec2(centerCoord + cocFar * texelSize * kernelSampleCoord);
        vec3 sampleFar = textureLod(uColorTexture, sampleCoordFar, 1).rgb;
 
        sumFar += sampleFar;
    }
 
    sumNear *= (1.0 / 49.0);
	sumFar *= (1.0 / 49.0);
	
	imageStore(uImgOutA, ivec2(gl_GlobalInvocationID.xy), vec4(sumNear, cocNear));
	imageStore(uImgOutB, ivec2(gl_GlobalInvocationID.xy), vec4(sumFar, cocFar));
}