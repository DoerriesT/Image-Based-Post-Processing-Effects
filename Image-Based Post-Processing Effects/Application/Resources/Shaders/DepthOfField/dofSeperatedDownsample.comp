#version 450 core

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rg16f, binding = 0) uniform writeonly image2D uDownsampledCoc;
layout(rgba16f, binding = 1) uniform writeonly image2D uDownsampledNearField;
layout(rgba16f, binding = 2) uniform writeonly image2D uDownsampledFarField;

layout(binding = 0) uniform sampler2D uColorTexture;
layout(binding = 1) uniform sampler2D uCocTexture;

void main()
{	
	vec2 domainSize = textureSize(uColorTexture, 0).xy * 0.5;
	vec2 texelSize = vec2(1.0 / domainSize);
	vec2 centerCoord = vec2(vec2(gl_GlobalInvocationID.xy) + 0.5) * texelSize;
	
	vec4 near4 = textureGather(uCocTexture, centerCoord, 0);
	vec4 far4 = textureGather(uCocTexture, centerCoord, 1);

	vec4 red4 = textureGather(uColorTexture, centerCoord, 0);
	vec4 green4 = textureGather(uColorTexture, centerCoord, 1);
	vec4 blue4 = textureGather(uColorTexture, centerCoord, 2);

	vec3 colors[4];
	colors[0] = vec3(red4.x, green4.x, blue4.x);
	colors[1] = vec3(red4.y, green4.y, blue4.y);
	colors[2] = vec3(red4.z, green4.z, blue4.z);
	colors[3] = vec3(red4.w, green4.w, blue4.w);

	float nearWeightSum = 0.0;
	float farWeightSum = 0.0;
	vec3 nearColor = vec3(0.0);
	vec3 farColor = vec3(0.0);

	for (int i = 0; i < 4; ++i)
	{
		float nearWeight =  near4[i] > 0.0 ? 1.0 : 0.0;
		nearWeightSum += nearWeight;
		nearColor += nearWeight * colors[i];

		float farWeight =  far4[i] > 0.0 ? 1.0 : 0.0;
		farWeightSum += farWeight;
		farColor += farWeight * colors[i];
	}
	nearColor *= nearWeightSum > 0.0 ? (1.0 / nearWeightSum) : 1.0;
	farColor *= farWeightSum > 0.0 ? (1.0 / farWeightSum) : 1.0;
	
	float near = max(max(near4.x, near4.y), max(near4.z, near4.w)) * 0.5;
	float far = min(min(far4.x, far4.y), min(far4.z, far4.w)) * 0.5;
	
	imageStore(uDownsampledCoc, ivec2(gl_GlobalInvocationID.xy), vec4(near, far, 0.0, 1.0));
	
	vec4 nearLayer = vec4(nearColor, near);
	vec4 farLayer = vec4(farColor, far);
	
	nearLayer.rgb *= nearLayer.a;
	farLayer.rgb *= farLayer.a;
	
	imageStore(uDownsampledNearField, ivec2(gl_GlobalInvocationID.xy), nearLayer);
	imageStore(uDownsampledFarField, ivec2(gl_GlobalInvocationID.xy), farLayer);
}