#version 450 core

layout(local_size_x = 8, local_size_y = 8, local_size_z= 1) in;

layout(rgba16f, binding = 0) uniform image2D uImgOutA;
layout(rgba16f, binding = 1) uniform image2D uImgOutB;

layout(binding = 0) uniform sampler2D uColorNearTexture;
layout(binding = 1) uniform sampler2D uColorFarTexture;

uniform vec2 uSampleCoords[16];
uniform float uBokehScale;

void main()
{	
	vec2 texelSize = vec2(1.0 / textureSize(uColorNearTexture, 0).xy);
	vec2 centerCoord = vec2(gl_GlobalInvocationID.xy + 0.5) * texelSize;
	
    vec4 centerSampleNear = texture(uColorNearTexture, centerCoord).rgba;
    vec3 maxValNear = centerSampleNear.rgb;
    float cocNear = centerSampleNear.a;

	vec4 centerSampleFar = texture(uColorFarTexture, centerCoord).rgba;
    vec3 maxValFar = centerSampleFar.rgb;
    float cocFar = centerSampleFar.a;
	
    texelSize *= uBokehScale;
 
    for (int i = 0; i < 16; ++i)
    {
        vec2 sampleCoordNear = vec2(centerCoord + cocNear * texelSize * uSampleCoords[i]);
        vec3 sampleNear = texture(uColorNearTexture, sampleCoordNear).rgb;
        maxValNear = max(sampleNear, maxValNear);

		vec2 sampleCoordFar = vec2(centerCoord + cocFar * texelSize * uSampleCoords[i]);
        vec3 sampleFar = texture(uColorFarTexture, sampleCoordFar).rgb;
        maxValFar = max(sampleFar, maxValFar);
    }
	
	imageStore(uImgOutA, ivec2(gl_GlobalInvocationID.xy), vec4(maxValNear, cocNear));
	imageStore(uImgOutB, ivec2(gl_GlobalInvocationID.xy), vec4(maxValFar, cocFar));
}